[{"D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\index.tsx":"1","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\App.tsx":"2","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\Login.tsx":"3","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\reportWebVitals.ts":"4","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\API\\VRChat.ts":"5","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\Home.tsx":"6","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\Nav.tsx":"7","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\SelectPage.tsx":"8","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\Store\\Store.ts":"9","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\UserData.tsx":"10","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\Store\\Reducer.ts":"11","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\Friends.tsx":"12","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\Friend.tsx":"13","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\Avatars.tsx":"14","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\Loading.tsx":"15","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\Avatar.tsx":"16"},{"size":711,"mtime":1611666873583,"results":"17","hashOfConfig":"18"},{"size":713,"mtime":1611894850699,"results":"19","hashOfConfig":"18"},{"size":2473,"mtime":1612332730329,"results":"20","hashOfConfig":"18"},{"size":425,"mtime":1609094707786,"results":"21","hashOfConfig":"18"},{"size":3149,"mtime":1612147996491,"results":"22","hashOfConfig":"18"},{"size":282,"mtime":1611422823315,"results":"23","hashOfConfig":"18"},{"size":788,"mtime":1611998208279,"results":"24","hashOfConfig":"18"},{"size":2009,"mtime":1611804890144,"results":"25","hashOfConfig":"18"},{"size":122,"mtime":1611450675472,"results":"26","hashOfConfig":"18"},{"size":1998,"mtime":1611988478268,"results":"27","hashOfConfig":"18"},{"size":700,"mtime":1611894576363,"results":"28","hashOfConfig":"18"},{"size":1636,"mtime":1612334259376,"results":"29","hashOfConfig":"18"},{"size":1897,"mtime":1612330227337,"results":"30","hashOfConfig":"18"},{"size":2505,"mtime":1612092755821,"results":"31","hashOfConfig":"18"},{"size":331,"mtime":1611629387617,"results":"32","hashOfConfig":"18"},{"size":875,"mtime":1611732625228,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"vtzjzs",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},"D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\index.tsx",[],["76","77"],"D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\App.tsx",[],"D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\Login.tsx",[],"D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\reportWebVitals.ts",[],["78","79"],"D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\API\\VRChat.ts",["80"],"import { UserData } from \"../components/UserData\";\r\nimport { AuthUserData, OtherUserData, avatarInfo, Auth } from \"./types\";\r\n\r\nexport const AuthUser = (Auth: string) => {\r\n  const data = fetch(\r\n    \"https://cors-anywhere.herokuapp.com/https://api.vrchat.cloud/api/1/auth\",\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Basic ${Auth}`,\r\n        apiKey: \"JlE5Jldo5Jibnk5O5hTx6XVqsJu4WJ26\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        // credentials: \"same-origin\",\r\n      },\r\n      redirect: \"follow\",\r\n    },\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => data as Auth)\r\n    .catch((error) => null);\r\n\r\n  return data;\r\n};\r\n\r\n//get Data if you can login in\r\nexport const getUserData = (Auth: string) => {\r\n  const data = fetch(\r\n    \"https://cors-anywhere.herokuapp.com/https://api.vrchat.cloud/api/1/auth/user\",\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Basic ${Auth}`,\r\n        apiKey: \"JlE5Jldo5Jibnk5O5hTx6XVqsJu4WJ26\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      redirect: \"follow\",\r\n    },\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => data as AuthUserData)\r\n    .catch((error) => null);\r\n\r\n  return data;\r\n};\r\n\r\nexport const getOtherUserData = (Auth: string, ID: string) => {\r\n  const data = fetch(\r\n    `https://cors-anywhere.herokuapp.com/https://api.vrchat.cloud/api/1/users/${ID}?apiKey=JlE5Jldo5Jibnk5O5hTx6XVqsJu4WJ26&userid=${ID}`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Basic ${Auth}`,\r\n        apiKey: \"JlE5Jldo5Jibnk5O5hTx6XVqsJu4WJ26\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        // credentials: \"same-origin\",\r\n      },\r\n      redirect: \"follow\",\r\n    },\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => data as OtherUserData)\r\n    .catch((error) => null);\r\n\r\n  return data;\r\n};\r\n\r\nexport const getAvatarInfo = (Auth: string) => {\r\n  const Data = fetch(\r\n    \"https://cors-anywhere.herokuapp.com/https://vrchat.com/api/1/avatars?releaseStatus=all&sort=updated&order=descending&user=me&offset=0&n=20&apiKey=JlE5Jldo5Jibnk5O5hTx6XVqsJu4WJ26\",\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Basic ${Auth}`,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      redirect: \"manual\",\r\n    },\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.error) return null;\r\n      return data as Array<avatarInfo>;\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      return null;\r\n    });\r\n\r\n  return Data;\r\n};\r\n\r\nexport const changeAvatar = (Auth: string, AvatarID: string) => {\r\n  return fetch(\r\n    `https://cors-anywhere.herokuapp.com/https://api.vrchat.cloud/api/1/avatars/${AvatarID}/select?apiKey=JlE5Jldo5Jibnk5O5hTx6XVqsJu4WJ26`,\r\n    {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Authorization: `Basic ${Auth}`,\r\n        apiKey: \"JlE5Jldo5Jibnk5O5hTx6XVqsJu4WJ26\",\r\n        // credentials: \"same-origin\",\r\n      },\r\n      redirect: \"follow\",\r\n    },\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => true)\r\n    .catch((error) => false);\r\n};\r\n","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\Home.tsx",[],"D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\Nav.tsx",["81"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Tstate } from \"../Store/Reducer\";\r\nimport { AuthUserData } from \"../API/types\";\r\nimport \"../style/Nav.css\";\r\n\r\nexport const Nav = () => {\r\n  const AuthUserData = useSelector<Tstate, AuthUserData | null>(\r\n    (state) => state.AuthUserData,\r\n  );\r\n\r\n  return (\r\n    <div className=\"nav\">\r\n      <a href=\"https://hello.vrchat.com/\" target=\"_blank\">\r\n        VRChat\r\n      </a>\r\n      <div className=\"UserIconAndName\">\r\n        <p>{AuthUserData?.displayName}</p>\r\n        <img\r\n          src={\r\n            AuthUserData?.userIcon !== \"\"\r\n              ? AuthUserData?.userIcon\r\n              : AuthUserData?.currentAvatarImageUrl\r\n          }\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\SelectPage.tsx",[],"D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\Store\\Store.ts",[],["82","83"],"D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\UserData.tsx",["84"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Tstate } from \"../Store/Reducer\";\r\nimport { AuthUserData } from \"../API/types\";\r\nimport { getUserData } from \"../API/VRChat\";\r\nimport { Loading } from \"./Loading\";\r\nimport \"../style/UserData.css\";\r\n\r\nexport const UserData = () => {\r\n  const Auth = useSelector<Tstate, string>((state) => state.Auth);\r\n  // const Token = useSelector<Tstate, string>((state) => state.Token);\r\n  const AuthUserData = useSelector<Tstate, AuthUserData | null>(\r\n    (state) => state.AuthUserData,\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const GetData = async () => {\r\n      const UserData = await getUserData(Auth);\r\n\r\n      // if (UserData)\r\n      dispatch({ type: \"AuthUserData\", payload: UserData });\r\n    };\r\n\r\n    GetData();\r\n  }, []);\r\n\r\n  if (!AuthUserData) {\r\n    return (\r\n      <div className=\"userData\">\r\n        <Loading />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"userData\">\r\n        <img src={AuthUserData?.currentAvatarImageUrl} alt=\"\" />\r\n        <table>\r\n          <tr>\r\n            <td>Name :</td>\r\n            <td>{AuthUserData?.username}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Display :</td>\r\n            <td>{AuthUserData?.displayName}</td>\r\n          </tr>\r\n          {AuthUserData?.bio !== \"\" && (\r\n            <tr>\r\n              <td>Bio :</td>\r\n              <td>{AuthUserData?.bio}</td>\r\n            </tr>\r\n          )}\r\n          {AuthUserData?.bioLinks.length !== 0 && (\r\n            <tr>\r\n              <td>Bio Links :</td>\r\n              <td>{AuthUserData?.bioLinks}</td>\r\n            </tr>\r\n          )}\r\n          <tr>\r\n            <td>Friends :</td>\r\n            <td>{AuthUserData?.friends.length}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Online Friends :</td>\r\n            <td>{AuthUserData?.onlineFriends.length}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n",["85","86"],"D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\Store\\Reducer.ts",[],"D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\Friends.tsx",["87"],"D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\Friend.tsx",["88","89"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Tstate } from \"../Store/Reducer\";\r\nimport { getOtherUserData } from \"../API/VRChat\";\r\nimport { OtherUserData } from \"../API/types\";\r\nimport { Loading } from \"./Loading\";\r\n// import StarsIcon from \"@material-ui/icons/Stars\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport \"../style/Friend.css\";\r\n\r\ntype props = {\r\n  UserID: string;\r\n};\r\n\r\nexport const Friend = ({ UserID }: props) => {\r\n  const [UserData, SetUserData] = useState<OtherUserData | null>(null);\r\n  // const Auth = useSelector<Tstate, string>((state) => state.Auth);\r\n  const Auth = useSelector<Tstate, string>((state) => state.Auth);\r\n\r\n  useEffect(() => {\r\n    FetchUserData();\r\n  }, []);\r\n\r\n  const FetchUserData = async () => {\r\n    const data = await getOtherUserData(Auth, UserID);\r\n    // console.log(data, Auth);\r\n    SetUserData(() => data);\r\n  };\r\n\r\n  if (!UserData) {\r\n    return (\r\n      <div\r\n        className=\"friend\"\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => FetchUserData()}>\r\n        <Loading />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"friend\">\r\n      {UserData.userIcon && (\r\n        <MonetizationOnIcon fontSize=\"large\" className=\"SubIcon\" />\r\n      )}\r\n      <img\r\n        src={\r\n          UserData?.userIcon !== \"\"\r\n            ? UserData.userIcon\r\n            : UserData?.currentAvatarImageUrl\r\n        }\r\n      />\r\n      <div className=\"detail\">\r\n        <table>\r\n          <tr>\r\n            <td>Name:</td>\r\n            <td>{UserData.username}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Display:</td>\r\n            <td>{UserData.displayName}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>State:</td>\r\n            <td>{UserData.status}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\Avatars.tsx",["90"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Tstate } from \"../Store/Reducer\";\r\nimport { avatarInfo } from \"../API/types\";\r\nimport { changeAvatar, getAvatarInfo, getUserData } from \"../API/VRChat\";\r\nimport { Avatar } from \"./Avatar\";\r\nimport { Loading } from \"./Loading\";\r\nimport \"../style/Avatars.css\";\r\n\r\nexport const Avatars = () => {\r\n  const [input, setInput] = useState<string>(\"\");\r\n  const [avatarInfos, setAvatarInfos] = useState<avatarInfo[] | null>(null);\r\n\r\n  const Auth = useSelector<Tstate, string>((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const getDatas = async () => {\r\n      const data = await getAvatarInfo(Auth);\r\n\r\n      if (data) {\r\n        setAvatarInfos(() => data);\r\n      }\r\n    };\r\n\r\n    getDatas();\r\n  }, []);\r\n\r\n  const handleButton = async () => {\r\n    let AvatarID = \"avtr_d720f33e-ed8d-4b1e-8d74-9735e17c87d5\";\r\n    if (input.length !== 0) {\r\n      AvatarID = input;\r\n    }\r\n\r\n    const res = await changeAvatar(Auth, AvatarID);\r\n\r\n    if (res) {\r\n      const Data = await getUserData(Auth);\r\n      dispatch({ type: \"AuthUserData\", payload: Data });\r\n    }\r\n  };\r\n\r\n  if (!avatarInfos)\r\n    return (\r\n      <div className=\"avatars\">\r\n        <div className=\"change\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter AvatarId. Default:Robot\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n          <button onClick={handleButton}>Change Avatar</button>\r\n        </div>\r\n        <Loading />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"avatars\">\r\n      <div className=\"change\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter AvatarId. Default:Robot\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <button onClick={handleButton}>Change Avatar</button>\r\n      </div>\r\n      <p>Click picture to copy AvatarId</p>\r\n      {/* <div className=\"listOutside\"> */}\r\n      <div className=\"avatarList\">\r\n        {avatarInfos &&\r\n          avatarInfos!.map((item) => (\r\n            <Avatar\r\n              key={item.name}\r\n              name={item.name}\r\n              id={item.id}\r\n              imageUrl={item.imageUrl}\r\n              releaseStatus={item.releaseStatus}\r\n              setInputCallback={setInput}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n    // {/* </div> */}\r\n  );\r\n};\r\n","D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\Loading.tsx",[],"D:\\TypeScript\\React-App\\vrchat-search-user-data\\src\\components\\Avatar.tsx",["91","92"],"import React, { useState } from \"react\";\r\nimport \"../style/avatar.css\";\r\n\r\ntype props = {\r\n  name: string;\r\n  imageUrl: string;\r\n  id: string;\r\n  releaseStatus: string;\r\n  setInputCallback: Function;\r\n};\r\nexport const Avatar = ({\r\n  imageUrl,\r\n  name,\r\n  releaseStatus,\r\n  id,\r\n  setInputCallback,\r\n}: props) => {\r\n  const copyLink = () => {\r\n    navigator.clipboard.writeText(id);\r\n    setInputCallback(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"avatar\">\r\n      <img onClick={copyLink} src={imageUrl} title=\"Click to copy AvatarId\" />\r\n      {\r\n        <div className=\"detail\">\r\n          <table>\r\n            <tr>\r\n              <td>Name:</td>\r\n              <td>{name}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>State:</td>\r\n              <td>{releaseStatus}</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":14,"column":43,"nodeType":"105","endLine":14,"endColumn":58},{"ruleId":"93","replacedBy":"106"},{"ruleId":"95","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":27,"column":6,"nodeType":"110","endLine":27,"endColumn":8,"suggestions":"111"},{"ruleId":"93","replacedBy":"112"},{"ruleId":"95","replacedBy":"113"},{"ruleId":"108","severity":1,"message":"114","line":22,"column":6,"nodeType":"110","endLine":22,"endColumn":8,"suggestions":"115"},{"ruleId":"108","severity":1,"message":"116","line":22,"column":6,"nodeType":"110","endLine":22,"endColumn":8,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":46,"column":7,"nodeType":"120","endLine":52,"endColumn":9},{"ruleId":"108","severity":1,"message":"121","line":27,"column":6,"nodeType":"110","endLine":27,"endColumn":8,"suggestions":"122"},{"ruleId":"99","severity":1,"message":"123","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":25,"column":7,"nodeType":"120","endLine":25,"endColumn":79},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],["124"],["125"],"@typescript-eslint/no-unused-vars","'UserData' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["124"],["125"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Auth' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["126"],["124"],["125"],"React Hook useEffect has a missing dependency: 'MyData'. Either include it or remove the dependency array.",["127"],"React Hook useEffect has a missing dependency: 'FetchUserData'. Either include it or remove the dependency array.",["128"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'Auth'. Either include it or remove the dependency array.",["129"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [Auth, dispatch]",{"range":"138","text":"139"},"Update the dependencies array to be: [MyData]",{"range":"140","text":"141"},"Update the dependencies array to be: [FetchUserData]",{"range":"142","text":"143"},"Update the dependencies array to be: [Auth]",{"range":"144","text":"145"},[854,856],"[Auth, dispatch]",[813,815],"[MyData]",[784,786],"[FetchUserData]",[852,854],"[Auth]"]